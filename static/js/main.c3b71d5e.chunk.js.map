{"version":3,"sources":["public/img/JohnCena.png","public/img/AlexaRoy.png","public/img/PeterSnow.png","components/navbar/navbar.js","api/categoryApi.js","actions/categoryActions.js","actions/actionTypes.js","services/candidateData.js","components/task/card/TaskCard.js","containers/cardContainer.js","containers/dragDropContainer.js","components/widgets/Modal.js","components/task/category/AddCategory.js","containers/addCategoryContainer.js","components/task/CreateTask.js","containers/createTaskContainer.js","components/project/ProjectDetails.js","containers/projectLayoutContainer.js","containers/projectContainer.js","reducers/categoryReducer.js","reducers/index.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","Nav","children","className","bsStyle","fixedTop","Header","Brand","href","CategoryData","category_title","category_id","tasks","task_id","task_title","participant","date","Date","progress","CategoryApi","Promise","resolve","reject","loadCategorySuccess","category","type","createTaskSuccess","data","updateTaskSuccess","dragAndDropCardUpdateSuccess","dragListId","dropListId","cardId","addCategorySuccess","categoryName","loadCategory","dispatch","getAllCategory","then","catch","error","createTask","updateTask","dragAndDropCardUpdate","addCategory","Candidates","name","pic","AlexaRoy","JohnCena","PeterSnow","CardComponent","this","props","card","categoryId","onClickOnCard","map","candidate","alt","src","filter","glyph","onClick","moment","format","React","Component","CardContainer","connectDragSource","connectDropTarget","TaskCard","cardTarget","hover","monitor","component","dragIndex","getItem","index","hoverIndex","sourceListId","listId","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","flow","DropTarget","connect","dropTarget","DragSource","beginDrag","endDrag","item","dropResult","getDropResult","actions","removeCard","dragSource","isDragging","state","bindActionCreators","DragDropContainer","cards","setState","list","nextProps","update","$push","$splice","dragCard","canDrop","isOver","id","backgroundColor","height","length","style","minWidth","width","window","innerWidth","i","console","log","key","drop","sourceObj","pushCard","category_fetching","categoryReducer","ModalComponent","show","onHide","ModalTitle","addAdd","addBtnLabel","backdrop","closeButton","Title","Body","Footer","AddCategoryComponent","showCreateCategoryModal","openCreateCategoryModal","closeCreateCategoryModal","changeCategoryName","Modal","controlId","validationState","value","placeholder","onChange","e","AddCategoryContainer","target","AddCategory","createTasksComponent","showCreateTaskModal","taskTitle","particepants","selectedDate","progressValue","changeTaskTitle","closeCreateTaskModal","openCreateTaskModal","onChangeDate","onToggleCheckbox","onChangeSliderValue","createTasks","checked","includes","selected","change","step","max","min","orientation","CreateTask","clearCategoryData","idGenerator","n","generatorId","stringg","charAt","Math","floor","random","showModal","taskId","requestObj","taskData","push","taskIndex","findTaskIndex","ProjectDetails","categories","projectTitle","CNumber","memberName","color","fontSize","ProjectDetailContainer","tId","cId","pullRight","bsSize","styles","grid","margin","whiteSpace","overflowX","overflowY","verticalAlign","projectContainer","DragDropContext","HTML5Backend","initialState","findCategoryIndex","rootReducer","combineReducers","action","catIndex","Object","assign","cagegoryIndex","taskIndx","dragCagegoryIndex","dropCagegoryIndex","updatedTask","task","Boolean","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c3b71d5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JohnCena.6e949f40.png\";","module.exports = __webpack_public_path__ + \"static/media/AlexaRoy.e5949df4.png\";","module.exports = __webpack_public_path__ + \"static/media/PeterSnow.a7b494ce.png\";","import React from \"react\";\n\nimport \"./navbar.scss\";\nimport { Navbar } from \"react-bootstrap\";\n\nconst Nav = ({ children }) => {\n  return (\n    <div className=\"nav-component\">\n      <Navbar className=\"navbar\" bsStyle=\"Green\" fixedTop={true}>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"/\">Project Board</a>\n          </Navbar.Brand>\n        </Navbar.Header>\n        {children}\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Nav;\n","const CategoryData = [\n  {\n    category_title: \"On Track\",\n    category_id: 1,\n    tasks: [\n      {\n        task_id: 11,\n        task_title: \"CBSE grade 4 Math\",\n        participant: [\"JohnCena\", \"PeterSnow\"],\n        date: new Date(),\n        progress: 78\n      }\n    ]\n  },\n  {\n    category_title: \"Delayed\",\n    category_id: 2,\n    tasks: [\n      {\n        task_id: 12,\n        task_title: \"CBSE grade 5 Math\",\n        participant: [\"JohnCena\"],\n        date: new Date(),\n        progress: 88\n      }\n    ]\n  }\n];\n\nclass CategoryApi {\n  static getAllCategory() {\n    return new Promise((resolve, reject) => {\n      return resolve(CategoryData);\n    });\n  }\n}\n\nexport default CategoryApi;\n","import * as types from \"./actionTypes\";\nimport CategoryApi from \"../api/categoryApi\";\n\nexport function loadCategorySuccess(category) {\n  return { type: types.LOAD_CATEGORY_SUCCESS, category };\n}\n\nexport function createTaskSuccess(data) {\n  return { type: types.CREATE_TASK_SUCCESS, data };\n}\n\nexport function updateTaskSuccess(data) {\n  return {\n    type: types.UPDATE_TASK_SUCCESS,\n    data\n  };\n}\n\nexport function dragAndDropCardUpdateSuccess(dragListId, dropListId, cardId) {\n  return {\n    type: types.CARD_DRAG_AND_DROP_SUCCESS,\n    data: {\n      dragListId,\n      dropListId,\n      cardId\n    }\n  };\n}\n\nexport function addCategorySuccess(categoryName) {\n  return { type: types.CREATE_CATEGORY_SUCCESS, categoryName };\n}\n\nexport function loadCategory() {\n  return function(dispatch) {\n    return CategoryApi.getAllCategory()\n      .then(category => {\n        dispatch(loadCategorySuccess(category));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n}\n\nexport function createTask(data) {\n  return function(dispatch) {\n    dispatch(createTaskSuccess(data));\n  };\n}\n\nexport function updateTask(data) {\n  return function(dispatch) {\n    dispatch(updateTaskSuccess(data));\n  };\n}\n\nexport function dragAndDropCardUpdate(dragListId, dropListId, cardId) {\n  return function(dispatch) {\n    dispatch(dragAndDropCardUpdateSuccess(dragListId, dropListId, cardId));\n  };\n}\n\nexport function addCategory(categoryName) {\n  return function(dispatch) {\n    dispatch(addCategorySuccess(categoryName));\n  };\n}\n","export const LOAD_CATEGORY_SUCCESS = \"LOAD_CATEGORY_SUCCESS\";\nexport const CREATE_CATEGORY_SUCCESS = \"CREATE_CATEGORY_SUCCESS\";\nexport const UPDATE_TASK_SUCCESS = \"UPDATE_TASK_SUCCESS\";\nexport const CREATE_TASK_SUCCESS = \"CREATE_TASK_SUCCESS\";\nexport const CARD_DRAG_AND_DROP_SUCCESS = \"CARD_DRAG_AND_DROP_SUCCESS\";\nexport const CREATE_TASK_CATEGORY_SUCCESS = \"CREATE_TASK_CATEGORY_SUCCESS\";\n","import JohnCena from \"../public/img/JohnCena.png\";\nimport AlexaRoy from \"../public/img/AlexaRoy.png\";\nimport PeterSnow from \"../public/img/PeterSnow.png\";\n\nexport const Candidates = [\n  {\n    name: \"AlexaRoy\",\n    pic: AlexaRoy\n  },\n  {\n    name: \"JohnCena\",\n    pic: JohnCena\n  },\n  {\n    name: \"PeterSnow\",\n    pic: PeterSnow\n  }\n];\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Glyphicon } from \"react-bootstrap\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport \"./taskCard.scss\";\n\nimport { Candidates } from \"../../../services/candidateData\";\n\nconst findProfilePic = name => {\n  const candidate = Candidates.filter(data => data.name === name)[0];\n  return candidate.pic;\n};\n\nclass CardComponent extends React.Component {\n  render() {\n    const { card, categoryId, onClickOnCard } = this.props;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card_grid\">\n          <div>\n            <div>\n              <h6>{card.task_title} </h6>\n            </div>\n          </div>\n\n          <div className=\"card_container\">\n            <div className=\"card_avatar_container\">\n              {card.participant.map(candidate => (\n                <img\n                  alt={candidate}\n                  src={findProfilePic(candidate)}\n                  className=\"card_avatar\"\n                />\n              ))}\n              <Glyphicon\n                glyph=\"plus-sign\"\n                onClick={() => onClickOnCard(card.task_id, categoryId)}\n              />\n            </div>\n\n            <div className=\"card_calender\">\n              <span>\n                {\" \"}\n                <Glyphicon\n                  glyph=\"calendar\"\n                  onClick={() => onClickOnCard(card.task_id, categoryId)}\n                />\n                {moment(card.date).format(\"DD MMM, YYYY\")}\n              </span>\n            </div>\n            <div\n              className=\"card_progress\"\n              onClick={() => onClickOnCard(card.task_id, categoryId)}\n            >\n              <span>{card.progress} %</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardComponent;\n","import React, { Component } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { DragSource, DropTarget } from \"react-dnd\";\nimport flow from \"lodash/flow\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/categoryActions\";\nimport TaskCardComponent from \"../components/task/card/TaskCard\";\n\nexport class CardContainer extends Component {\n  render() {\n    const {\n      connectDragSource,\n      connectDropTarget,\n      categoryId,\n      onClickOnCard\n    } = this.props;\n\n    return connectDragSource(\n      connectDropTarget(\n        <div>\n          <TaskCardComponent\n            card={this.props.card}\n            categoryId={categoryId}\n            onClickOnCard={onClickOnCard}\n          />\n        </div>\n      )\n    );\n  }\n}\n\nconst cardSource = {\n  beginDrag(props) {\n    return {\n      index: props.index,\n      listId: props.listId,\n      card: props.card\n    };\n  },\n\n  endDrag(props, monitor) {\n    const item = monitor.getItem();\n    const dropResult = monitor.getDropResult();\n\n    if (dropResult && dropResult.listId !== item.listId) {\n      props.actions.dragAndDropCardUpdate(\n        props.listId,\n        dropResult.listId,\n        props.card.task_id\n      );\n      props.removeCard(item.index);\n    }\n  }\n};\n\nconst cardTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n    const sourceListId = monitor.getItem().listId;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Determine rectangle on screen\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect();\n\n    // Get vertical middle\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset();\n\n    // Get pixels to the top\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n    // Only perform the move when the mouse has crossed half of the items height\n    // When dragging downwards, only move when the cursor is below 50%\n    // When dragging upwards, only move when the cursor is above 50%\n\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return;\n    }\n\n    // Dragging upwards\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return;\n    }\n\n    // Time to actually perform the action\n    if (props.listId === sourceListId) {\n      props.moveCard(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      monitor.getItem().index = hoverIndex;\n    }\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { actions: bindActionCreators(actions, dispatch) };\n}\n\nexport default flow(\n  DropTarget(\"CARD\", cardTarget, connect => ({\n    connectDropTarget: connect.dropTarget()\n  })),\n  DragSource(\"CARD\", cardSource, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  })),\n  connect(mapStateToProps, mapDispatchToProps)\n)(CardContainer);\n","import React, { Component } from \"react\";\nimport update from \"react-addons-update\";\nimport CardContainer from \"./cardContainer\";\nimport { DropTarget } from \"react-dnd\";\nimport flow from \"lodash/flow\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions/categoryActions\";\n\nclass DragDropContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { cards: [] };\n  }\n\n  componentDidMount() {\n    this.setState({ cards: this.props.list });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      cards: this.props.list\n    });\n  }\n\n  pushCard(card) {\n    this.setState(\n      update(this.state, {\n        cards: {\n          $push: [card]\n        }\n      })\n    );\n  }\n\n  removeCard(index) {\n    this.setState(\n      update(this.state, {\n        cards: {\n          $splice: [[index, 1]]\n        }\n      })\n    );\n  }\n\n  moveCard(dragIndex, hoverIndex) {\n    let { cards } = this.state;\n    let dragCard = cards[dragIndex];\n\n    this.setState(\n      update(this.state, {\n        cards: {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard]\n          ]\n        }\n      })\n    );\n  }\n\n  render() {\n    let { cards } = this.state;\n    let { canDrop, isOver, connectDropTarget, id, onClickOnCard } = this.props;\n    let isActive = canDrop && isOver;\n\n    const backgroundColor = isActive ? \"#00b386\" : \"#FFF\";\n    const height = cards.length === 0 ? \"50px\" : \"auto\";\n    const style = {\n      minWidth: \"200px\",\n      width: 0.2 * window.innerWidth,\n      backgroundColor: backgroundColor,\n      height: height\n    };\n\n    return connectDropTarget(\n      <div style={style}>\n        {cards.map((card, i) => {\n          console.log(\"card\", card);\n          return (\n            <CardContainer\n              key={card.task_id}\n              index={card.task_id}\n              listId={this.props.id}\n              card={card}\n              categoryId={id}\n              onClickOnCard={onClickOnCard}\n              // projectTitle={this.props.projectTitle}\n              removeCard={() => this.removeCard()}\n              moveCard={() => this.moveCard()}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst cardTarget = {\n  drop(props, monitor, component) {\n    const { id } = props;\n    const sourceObj = monitor.getItem();\n    if (id !== sourceObj.listId) component.pushCard(sourceObj.card);\n    return {\n      listId: id\n    };\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    category_fetching: state.categoryReducer.category_fetching\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { actions: bindActionCreators(actions, dispatch) };\n}\n\nexport default flow(\n  DropTarget(\"CARD\", cardTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop()\n  })),\n  connect(mapStateToProps, mapDispatchToProps)\n)(DragDropContainer);\n","import React from \"react\";\n\nimport \"./modal.scss\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst ModalComponent = ({\n  show,\n  onHide,\n  ModalTitle,\n  addAdd,\n  addBtnLabel,\n  children\n}) => {\n  return (\n    <Modal className=\"model\" backdrop={false} show={show} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{ModalTitle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n      <Modal.Footer>\n        <Button\n          id=\"cancel\"\n          bsStyle=\"white\"\n          className=\"model_button model_btn_cancel\"\n          onClick={onHide}\n        >\n          Cancel\n        </Button>\n        <Button\n          id=\"submit\"\n          bsStyle=\"Green\"\n          className=\"model_button model_btn_create\"\n          onClick={() => addAdd()}\n        >\n          {addBtnLabel}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ModalComponent;\n","import React from \"react\";\nimport ModalComponent from \"../../widgets/Modal\";\n\nimport \"./addCategory.scss\";\nimport { FormGroup, ControlLabel, FormControl } from \"react-bootstrap\";\n\nconst AddCategoryComponent = ({\n  showCreateCategoryModal,\n  categoryName,\n  openCreateCategoryModal,\n  closeCreateCategoryModal,\n  changeCategoryName,\n  addCategory\n}) => {\n  return (\n    <div className=\"addCategory\">\n      <div\n        className=\"addCategory_card\"\n        onClick={() => openCreateCategoryModal()}\n      >\n        <h5 id=\"addNewMember\" className=\"addCategory_grid\">\n          Add New Category\n        </h5>\n      </div>\n\n      <ModalComponent\n        show={showCreateCategoryModal}\n        onHide={closeCreateCategoryModal}\n        ModalTitle=\"Add Category\"\n        addAdd={addCategory}\n        addBtnLabel=\"Create\"\n      >\n        <form>\n          <FormGroup controlId=\"formBasicText\" validationState=\"\">\n            <ControlLabel>Category Name</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={categoryName}\n              placeholder=\"Enter Category Name\"\n              onChange={e => changeCategoryName(e)}\n            />\n          </FormGroup>\n        </form>\n      </ModalComponent>\n    </div>\n  );\n};\n\nexport default AddCategoryComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as actions from \"../actions/categoryActions\";\nimport AddCategoryComponent from \"../components/task/category/AddCategory\";\n\nexport class AddCategoryContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCreateCategoryModal: false,\n      categoryName: null\n    };\n  }\n\n  closeCreateCategoryModal = () => {\n    this.setState({\n      showCreateCategoryModal: false,\n      categoryName: null\n    });\n  };\n\n  openCreateCategoryModal = () => {\n    this.setState({ showCreateCategoryModal: true });\n  };\n\n  changeCategoryName = e => {\n    this.setState({ categoryName: e.target.value });\n  };\n\n  addCategory = () => {\n    const { categoryName } = this.state;\n    this.props.actions.addCategory(categoryName);\n    this.setState({\n      showCreateCategoryModal: false,\n      categoryName: null\n    });\n  };\n\n  render() {\n    const { showCreateCategoryModal, categoryName } = this.state;\n    return (\n      <div>\n        <AddCategoryComponent\n          showCreateCategoryModal={showCreateCategoryModal}\n          categoryName={categoryName}\n          openCreateCategoryModal={this.openCreateCategoryModal}\n          closeCreateCategoryModal={this.closeCreateCategoryModal}\n          changeCategoryName={this.changeCategoryName}\n          addCategory={this.addCategory}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { actions: bindActionCreators(actions, dispatch) };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddCategoryContainer);\n","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport ReactBootstrapSlider from \"react-bootstrap-slider\";\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport \"./createTask.scss\";\nimport {\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  Glyphicon,\n  Checkbox\n} from \"react-bootstrap\";\n\nimport ModalComponent from \"../widgets/Modal\";\n\nimport { Candidates } from \"../../services/candidateData\";\n\nconst createTasksComponent = ({\n  showCreateTaskModal,\n  taskTitle,\n  particepants,\n  selectedDate,\n  progressValue,\n  changeTaskTitle,\n  closeCreateTaskModal,\n  openCreateTaskModal,\n  onChangeDate,\n  onToggleCheckbox,\n  onChangeSliderValue,\n  createTasks\n}) => {\n  return (\n    <div className=\"createTask\">\n      <div className=\"createTask_card\" onClick={() => openCreateTaskModal()}>\n        <h5 id=\"createTask\" className=\"createTask_grid\">\n          <Glyphicon glyph=\"plus-sign\" />\n          <br />\n          Create Task\n        </h5>\n      </div>\n\n      <ModalComponent\n        show={showCreateTaskModal}\n        onHide={closeCreateTaskModal}\n        ModalTitle=\"Create Task\"\n        addAdd={createTasks}\n        addBtnLabel=\"Create\"\n      >\n        <form>\n          <FormGroup controlId=\"formBasicText\" validationState=\"\">\n            <ControlLabel>Title</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={taskTitle}\n              placeholder=\"Enter Task Title\"\n              onChange={e => changeTaskTitle(e)}\n            />\n          </FormGroup>\n\n          <div>\n            <ControlLabel>Candidates</ControlLabel>\n            {Candidates.map(candidate => (\n              <Checkbox\n                name={candidate.name}\n                checked={particepants.includes(candidate.name)}\n                onChange={() => onToggleCheckbox(candidate.name)}\n              >\n                <img\n                  alt={candidate.name}\n                  src={candidate.pic}\n                  style={{ height: 30, width: 30 }}\n                />{\" \"}\n                <span>{candidate.name}</span>\n              </Checkbox>\n            ))}\n          </div>\n\n          <ControlLabel>Task Date</ControlLabel>\n          <div>\n            <DatePicker selected={selectedDate} onChange={onChangeDate} />\n          </div>\n          <br />\n\n          <ControlLabel>Task Progress</ControlLabel>\n          <div>\n            <ReactBootstrapSlider\n              value={progressValue}\n              change={onChangeSliderValue}\n              // slideStop={this.changeValue}\n              step={1}\n              max={100}\n              min={0}\n              orientation=\"horizontal\"\n            />\n          </div>\n        </form>\n      </ModalComponent>\n    </div>\n  );\n};\n\nexport default createTasksComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport * as actions from \"../actions/categoryActions\";\nimport CreateTasksComponent from \"../components/task/CreateTask\";\n\nconst findTaskIndex = (tasks, id) => {\n  let index = -1;\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].task_id === id) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n};\n\nexport class CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCreateTaskModal: false,\n      taskTitle: null,\n      particepants: [],\n      selectedDate: new Date(),\n      progressValue: 0\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.showModal) {\n      const taskIndex = findTaskIndex(\n        nextProps.category.tasks,\n        nextProps.taskId\n      );\n\n      const taskData = nextProps.category.tasks[taskIndex];\n\n      this.setState({\n        showCreateTaskModal: true,\n        taskTitle: taskData.task_title,\n        particepants: taskData.participant,\n        selectedDate: taskData.date,\n        progressValue: taskData.progress\n      });\n    }\n  }\n\n  closeCreateTaskModal = () => {\n    this.setState({\n      showCreateTaskModal: false,\n      taskTitle: null,\n      particepants: [],\n      selectedDate: new Date(),\n      progressValue: 0\n    });\n    this.props.clearCategoryData();\n  };\n\n  openCreateTaskModal = () => {\n    this.setState({\n      showCreateTaskModal: true\n    });\n  };\n\n  changeTaskTitle = e => {\n    this.setState({ taskTitle: e.target.value });\n  };\n\n  idGenerator = n => {\n    let generatorId = \"\";\n    var stringg =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < n; i++) {\n      generatorId += stringg.charAt(Math.floor(Math.random() * stringg.length));\n    }\n    return generatorId;\n  };\n\n  createTasks = () => {\n    const { taskTitle, particepants, selectedDate, progressValue } = this.state;\n    const { category_id, showModal, category, taskId } = this.props;\n\n    if (showModal) {\n      const requestObj = {\n        category_id: category.category_id,\n        taskData: {\n          task_id: taskId,\n          task_title: taskTitle,\n          participant: particepants,\n          date: selectedDate,\n          progress: progressValue\n        }\n      };\n      this.props.actions.updateTask(requestObj);\n    } else {\n      let task_id =\n        this.idGenerator(5) + this.state.taskTitle + this.idGenerator(5);\n\n      const requestObj = {\n        category_id: category_id,\n        taskData: {\n          task_id,\n          task_title: taskTitle,\n          participant: particepants,\n          date: selectedDate,\n          progress: progressValue\n        }\n      };\n      this.props.actions.createTask(requestObj);\n    }\n\n    this.props.clearCategoryData();\n\n    this.setState({\n      showCreateTaskModal: false,\n      taskTitle: null,\n      particepants: [],\n      selectedDate: new Date(),\n      progressValue: 0\n    });\n  };\n\n  onChangeDate = e => {\n    this.setState({\n      selectedDate: e\n    });\n  };\n\n  onToggleCheckbox = e => {\n    let { particepants } = this.state;\n    if (particepants.includes(e)) {\n      particepants = particepants.filter(data => data !== e);\n    } else {\n      particepants.push(e);\n    }\n    this.setState({\n      particepants: particepants\n    });\n  };\n\n  onChangeSliderValue = e => {\n    // console.log(e);\n    this.setState({\n      progressValue: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      showCreateTaskModal,\n      taskTitle,\n      particepants,\n      selectedDate,\n      progressValue\n    } = this.state;\n    return (\n      <div>\n        <CreateTasksComponent\n          showCreateTaskModal={showCreateTaskModal}\n          taskTitle={taskTitle}\n          particepants={particepants}\n          selectedDate={selectedDate}\n          progressValue={progressValue}\n          changeTaskTitle={this.changeTaskTitle}\n          closeCreateTaskModal={this.closeCreateTaskModal}\n          openCreateTaskModal={this.openCreateTaskModal}\n          onChangeDate={this.onChangeDate}\n          onToggleCheckbox={this.onToggleCheckbox}\n          onChangeSliderValue={this.onChangeSliderValue}\n          createTasks={this.createTasks}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { actions: bindActionCreators(actions, dispatch) };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTask);\n","import React from \"react\";\n\nimport \"./projectDetails.scss\";\nimport DragDropContainer from \"../../containers/dragDropContainer\";\nimport AddCategoryContainer from \"../../containers/addCategoryContainer\";\nimport CreateTaskContainer from \"../../containers/createTaskContainer\";\n\nconst ProjectDetails = ({\n  categories,\n  taskId,\n  categoryId,\n  projectTitle,\n  onClickOnCard,\n  clearCategoryData\n}) => {\n  return (\n    <div className=\"project\">\n      {categories &&\n        categories.map((data, i) => {\n          return (\n            <div\n              id=\"members\"\n              key={data.category_id}\n              className=\"project_grid project_taskgrid\"\n            >\n              <div className=\"project_card\">\n                <h5 className=\"project_title\">{data.category_title}</h5>\n              </div>\n              <DragDropContainer\n                id={data.category_id}\n                CNumber={data.category_id}\n                list={data.tasks}\n                memberName={data.category_title}\n                projectTitle={projectTitle}\n                onClickOnCard={onClickOnCard}\n              />\n              <CreateTaskContainer\n                showModal={data.category_id === categoryId}\n                taskId={taskId}\n                category={data}\n                category_id={data.category_id}\n                clearCategoryData={clearCategoryData}\n              />\n            </div>\n          );\n        })}\n      <div className=\"project_grid project_addmember\">\n        <AddCategoryContainer projectTitle={projectTitle} />\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDetails;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Nav, Glyphicon } from \"react-bootstrap\";\n\nimport NavBar from \"../components/navbar/navbar\";\nimport ProjectDetails from \"../components/project/ProjectDetails\";\n\nimport * as actions from \"../actions/categoryActions\";\n\nconst style = {\n  color: \"white\",\n  backgroundColor: \"#00b386\",\n  fontSize: \"25\"\n};\n\nexport class ProjectDetailContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      taskId: -1,\n      categoryId: -1\n    };\n  }\n  componentDidMount() {\n    this.props.actions.loadCategory();\n  }\n\n  onClickOnCard = (tId, cId) => {\n    this.setState({\n      taskId: tId,\n      categoryId: cId\n    });\n  };\n\n  clearCategoryData = () => {\n    this.setState({\n      taskId: -1,\n      categoryId: -1\n    });\n  };\n\n  render() {\n    const { categories } = this.props;\n    const { taskId, categoryId } = this.state;\n\n    console.log(categories);\n\n    return (\n      <div>\n        <NavBar>\n          <Nav pullRight>\n            <div>\n              <a href=\"/\">\n                <Glyphicon bsSize=\"large\" style={style} glyph=\"remove\" />\n              </a>\n            </div>\n          </Nav>\n        </NavBar>\n\n        <ProjectDetails\n          categories={categories}\n          taskId={taskId}\n          categoryId={categoryId}\n          onClickOnCard={this.onClickOnCard}\n          clearCategoryData={this.clearCategoryData}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    categories: state.categoryReducer.categories,\n    category_fetching: state.categoryReducer.category_fetching\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return { actions: bindActionCreators(actions, dispatch) };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProjectDetailContainer);\n","import React, { Component } from \"react\";\nimport { DragDropContext } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport ProjectLayoutContainer from \"./projectLayoutContainer\";\n\nlet styles = {\n  grid: {\n    width: \"100%\",\n    margin: \"2px auto\",\n    whiteSpace: \"nowrap\",\n    overflowX: \"auto\",\n    overflowY: \"hidden\",\n    verticalAlign: \"text-top\"\n  }\n};\n\nclass projectContainer extends Component {\n  render() {\n    return (\n      <div style={styles.grid}>\n        <ProjectLayoutContainer projectTitle=\"Project Board\" />\n      </div>\n    );\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(projectContainer);\n","import * as types from \"../actions/actionTypes\";\n\nconst initialState = {\n  categories: [],\n  category_fetching: false\n};\n\nconst findCategoryIndex = (categories, id) => {\n  let index = -1;\n  for (let i = 0; i < categories.length; i++) {\n    if (categories[i].category_id === id) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n};\n\nconst findTaskIndex = (tasks, id) => {\n  let index = -1;\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].task_id === id) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n};\n\nexport default function categoryReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.LOAD_CATEGORY_SUCCESS:\n      return {\n        categories: action.category,\n        category_fetching: !state.category_fetching\n      };\n\n    case types.CREATE_CATEGORY_SUCCESS:\n      state.categories.push({\n        category_title: action.categoryName,\n        category_id: state.categories.length + 1,\n        tasks: []\n      });\n\n      return {\n        categories: state.categories,\n        category_fetching: !state.category_fetching\n      };\n\n    case types.CREATE_TASK_SUCCESS:\n      let catIndex = findCategoryIndex(\n        state.categories,\n        action.data.category_id\n      );\n\n      state.categories[catIndex].tasks.push(action.data.taskData);\n\n      return Object.assign({}, state, {\n        category_fetching: !state.category_fetching,\n        categories: state.categories\n      });\n\n    case types.UPDATE_TASK_SUCCESS:\n      const cagegoryIndex = findCategoryIndex(\n        state.categories,\n        action.data.category_id\n      );\n\n      const taskIndx = findTaskIndex(\n        state.categories[cagegoryIndex].tasks,\n        action.data.taskData.task_id\n      );\n\n      state.categories[cagegoryIndex].tasks[taskIndx] = action.data.taskData;\n\n      return Object.assign({}, state, {\n        categories: state.categories,\n        category_fetching: !state.category_fetching\n      });\n\n    case types.CARD_DRAG_AND_DROP_SUCCESS:\n      const dragCagegoryIndex = findCategoryIndex(\n        state.categories,\n        action.data.dragListId\n      );\n      const dropCagegoryIndex = findCategoryIndex(\n        state.categories,\n        action.data.dropListId\n      );\n\n      const taskIndex = findTaskIndex(\n        state.categories[dragCagegoryIndex].tasks,\n        action.data.cardId\n      );\n\n      state.categories[dropCagegoryIndex].tasks.push(\n        state.categories[dragCagegoryIndex].tasks[taskIndex]\n      );\n\n      const updatedTask = state.categories[dragCagegoryIndex].tasks.filter(\n        task => task.task_id !== action.data.cardId\n      );\n\n      state.categories[dragCagegoryIndex].tasks = updatedTask;\n\n      return {\n        categories: state.categories,\n        category_fetching: !state.category_fetching\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport categoryReducer from \"./categoryReducer\";\n\nconst rootReducer = combineReducers({\n  categoryReducer: categoryReducer\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport ProjectContainer from \"./containers/projectContainer\";\nimport configureStore from \"./store/configureStore\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ProjectContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk';\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}